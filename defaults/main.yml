---
#
# Celery role
#   Defaults for configuration values
#

# Celery version
celery_version: 3.1.9

# Add OS user
#  If you want the OS user to be created, set this to true
celery_adduser: True

# Celery owner
#  The user that will run the service (defaults to www-data)
#celery_owner: celery

# Celery group
#  (defaults to www-data)
#celery_group: celery

# Celery processes
#  Number of processes to spawn
celery_procs: 2

# Nodes names
#  white space separated list of names to give to workers
celery_nodes: worker

# Celery script
#  If installed from pip, /usr/local/bin/celery
celery_bin: /usr/local/bin/celery

# Celery options
celery_opts: '--time-limit=300 --concurrency=2'

celery_logdir:   /var/log/celery
celery_piddir:   /var/run/celery
celery_loglevel: info

# Command to be executed from supervisor
celery_command: "{{celery_bin}} worker -A {{celery_app}} --loglevel={{celery_loglevel}}"

# Enable logrotate configuration
celery_logrotate: True
celery_logrotate_conf: |
  daily
  compress
  delaycompress
  missingok
  rotate 30
  copytruncate

# Supervisor commands
#  It's a dict that represents commands that will be monitored by supervisor,
#  which in turn, contains a dict of parameters that will configure the program
#  to be run.
#  You should define this in a vars / group_vars file 
#
#supervisor_services:
#  celery:
#    command:        some_command
#    directory:      /app/prefix
#    process_name:   program_name
#    num_procs:      2
#    autostart:      true
#    stdout_logfile: /some/place.log
#    stderr_logfile: /some/err_place.log

# vi:ts=2:sw=2:et:ft=yaml
